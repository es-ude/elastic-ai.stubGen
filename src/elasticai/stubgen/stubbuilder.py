from typing import List

from elasticai.stubgen.functionbuilder import FunctionBuilder
from elasticai.stubgen.variable import Variable
from elasticai.stubgen.stub import Stub


class StubBuilder:

    def __init__(self) -> None:
        self._middleware_path = None
        self.stub_name: str = ''
        self._accelerator_id = None
        self._accelerator_address = None
        self.functions: List[FunctionBuilder] = []

    def set_name(self, name: str) -> None:
        self.stub_name = name

    def set_accelerator_id(self, accel_id: int) -> None:
        self._accelerator_id = accel_id

    def set_accelerator_address(self, address: int) -> None:
        self._accelerator_address = address

    def add_synchronous_function(self) -> None:
        self.functions.append(FunctionBuilder())
        self.functions[-1].set_call_pattern(FunctionBuilder.CallPattern.SYNC)

    def set_function_name(self, name: str) -> None:
        self.functions[-1].set_name(name)

    def set_function_return_type(self, ret_type: str) -> None:
        self.functions[-1].set_return_type(Variable.Type(ret_type))

    def add_function_input_parameter(self, param_name: str, param_type: str, length: int) -> None:
        self.functions[-1].add_input_parameter(Variable.Type(param_type), param_name, length)

    def add_function_output_parameter(self, param_name: str, param_type: str, length: int) -> None:
        self.functions[-1].add_output_parameter(Variable.Type(param_type), param_name, length)

    def _has_deploy_function(self) -> bool:
        return self._accelerator_address is not None and self._accelerator_id is not None

    def generate(self) -> Stub:
        stub = Stub(self.stub_name, 'This is an autogenerated stub. \nDo not change it manually.')
        if self._has_deploy_function():
            stub.add_static_deploy_function(self._accelerator_address, self._accelerator_id)
        if self._middleware_path:
            stub.set_relative_path_to_middleware_header(self._middleware_path)

        for function in self.functions:
            function.set_name_prefix(self.stub_name)
            stub.add_function(function.generate())

        return stub

    def set_middleware_path(self, path: str):
        self._middleware_path = path
